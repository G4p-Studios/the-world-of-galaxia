store@[] stores;
class store
{
string [] item_names;
double[] prices;
string name;
int mode=0;
store(string n)
{
name=n;
}
void add(string item_name, double price)
{
item_names.insert_last(item_name);
prices.insert_last(price);
}
void send(int peer, string packet="buysomething")
{
if(item_names.length()==0)
{
send_reliable(peer, "this store has no items. sorry.", 0);
return;
}
int index=get_player_index(peer);
if(index>-1)
{
string items;
int p, canbuy;
for(int i=0; i<item_names.length(); i++)
{
p=prices[i];
canbuy=players[index].inv_item_number("coins")/p;
items+=string_replace(item_names[i], "_", " ", true)+". costs "+p+" coins. You can buy "+canbuy+":"+item_names[i]+"[]";
}
send_menu(peer, string_replace(name, "_", " ", true), "buysomething", items);
}
}
int get_item_index(string name)
{
for(int i=0; i<item_names.length(); i++)
{
if(item_names[i]==name) return i;
}
return -1;
}
}

void create_store(string name)
{
store s(name);
stores.insert_last(s);
}
int get_store_index_from(string name)
{
for(int i=0; i<stores.length(); i++)
{
if(stores[i].name==name) return i;
}
return -1;
}
void add_to_store(string item, double price, string storename="misc_store")
{
bool added=true;
int index=get_store_index_from(storename);
if(index>-1)
{
string[] tempitems=stores[index].item_names;
for(int i=0; i<tempitems.length(); i++)
{
if(tempitems[i]==item) added=false;
}
}
else added=false;
if(added) stores[index].add(item, price);
else
{
return;
}
}
void reset_stores()
{
for(uint i=0; i<stores.length(); i++)
{
stores[i].item_names.resize(0);
stores[i].prices.resize(0);
}
}