double gamecoins=0;
int fishlives=5;
int casted=0;
int reeltime=5000;
int fishcaught=0;
int numofreels=5;
int reeled=0;
int nnumber=0;
int fishspeed=400;
timer reeltimer, fishtimer;
sound fambloop, casts, fishcoming, reel, fishlose, swimaway, mg3catch;
void mg3()
{
fishtimer.restart();
gamecoins=0;
fishlives=5;
casted=0;
reeltime=5000;
fishcaught=0;
numofreels=5;
reeled=0;
nnumber=0;
reeltimer.restart();
reeltimer.pause();
fambloop.load("heavywater.ogg");
casts.load("cast.ogg");
fishcoming.load("fishsplash"+random(1,5)+".ogg");
reel.load("reel.ogg");
fishlose.load("fishlose.ogg");
swimaway.load("swimaway.ogg");
mg3catch.load("catch.ogg");
fambloop.play_looped();
fishcoming.pan=-30;
fishcoming.play_looped();
while (true)
{
wait(5);
mainloop();
if (reeltimer.elapsed>=reeltime)
{
fishlose.play_wait();
reeltimer.restart();
reeltimer.pause();
reeled=0;
casted=0;
fishcoming.pan=-30;
fishcoming.play_looped();
nnumber=0;
if (fishspeed>=70)
{
fishspeed-=10;
}
fishtimer.restart();
fishlives-=1;
if (fishlives<1)
{
fambloop.stop();
fishtimer.pause();
fishcoming.stop();
send_reliable(peer_id, "acoins "+gamecoins, 0);
add_buffer_item("entertainment_center", "you earned a total of "+gamecoins+" coins in this game!");
entertainment_centermenu();
return;
}
}
if (fishtimer.elapsed>=fishspeed)
{
fishcoming.pan=fishcoming.pan+2;
fishtimer.restart();
}
if (fishcoming.pan>=30)
{
fishcoming.stop();
fishtimer.pause();
swimaway.play_wait();
if (fishlives>=0)
{
casted=0;
reeled=0;
fishcoming.pan=-30;
fishcoming.play_looped();
nnumber=0;
if (fishspeed>=70)
{
fishspeed-=10;
}
fishtimer.restart();
fishlives-=1;
}
if (fishlives==0)
{
fambloop.stop();
fishtimer.pause();
fishcoming.stop();
send_reliable(peer_id, "acoins "+gamecoins, 0);
add_buffer_item("entertainment_center", "you earned a total of "+gamecoins+" coins in this game!");
entertainment_centermenu();
return;
}
}
if (keyc.key_down(keyc.getKey("clipcopy")))
{
beep(1025);
clipboard_copy_text(m.get_item_name(m.menu_position));
}
if (key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT))
{
if (key_pressed(KEY_COMMA)==false and kcomma.pressing())
{
prevbufferitem();
}
if (key_pressed(KEY_PERIOD)==false and kperiod.pressing())
{
nextbufferitem();
}
if (key_pressed(KEY_LBRACKET)==false and klbracket.pressing())
{
bufferleft();
}
if (key_pressed(KEY_RBRACKET)==false and krbracket.pressing())
{
bufferright();
}
}
if (shift_is_down())
{
if (key_pressed(KEY_COMMA))
{
topbufferitem();
}
if (key_pressed(KEY_PERIOD))
{
bottombufferitem();
}
if (key_pressed(KEY_LBRACKET))
{
firstbuffer();
}
if (key_pressed(KEY_RBRACKET))
{
lastbuffer();
}
}
if(key_pressed(KEY_SLASH))
{
string chat=v.input("type your message here");
if (chat!="" and !is_eloquence_crash_word(chat) and get_sequence(chat, true)<=3)
{
string[] chats=string_split(chat,"::",true);
if(chat!="")
{
string sendmsg=chat;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id,sendmsg,1);
}
}
}
if (key_pressed(KEY_BACKSLASH) and dlocalchat==0)
{
string s=v.input("type your message here");
if (s!="" and !is_eloquence_crash_word(s) and get_sequence(s, true)<=3)
{
string sendmsg=s;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id, "localchat "+sendmsg, 0);
}
}
if(key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT) and key_up(KEY_LMENU) and key_up(KEY_RMENU) and key_pressed(KEY_EQUALS))
{
string colocar=v.input("enter the command. Note: / will be put before it automaticly");
if(colocar!="" and !is_eloquence_crash_word(colocar) and get_sequence(colocar, true)<=3)
{
string sendmsg=colocar;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id, "/"+sendmsg, 1);
}
}
if (key_pressed(KEY_ESCAPE))
{
fambloop.stop();
fishcoming.stop();
fishtimer.pause();
send_reliable(peer_id, "acoins "+gamecoins, 0);
add_buffer_item("entertainment_center", "you earned a total of "+gamecoins+" coins in this game!");
entertainment_centermenu();
return;
}
if (key_pressed(KEY_SPACE) and casted==0)
{
if (fishcoming.pan==0 or fishcoming.pan==1 or fishcoming.pan==2 or fishcoming.pan==3 or fishcoming.pan==4 or fishcoming.pan==5 or fishcoming.pan==-1 or fishcoming.pan==-2 or fishcoming.pan==-3 or fishcoming.pan==-4 or fishcoming.pan==-5)
{
reeltimer.restart();
reeled=1;
fishcoming.stop();
fishtimer.pause();
}
casts.stop();
casts.play();
casted=1;
}
if (key_pressed(KEY_LCONTROL) and reeled==1 or key_pressed(KEY_RCONTROL) and reeled==1)
{
reel.stop();
reel.play();
nnumber+=1;
if (nnumber>=numofreels)
{
reeltimer.pause();
mg3catch.play_wait();
fishcaught+=1;
gamecoins+=random(1,2);
casted=0;
reeled=0;
fishcoming.pan=-30;
fishcoming.play_looped();
nnumber=0;
if (fishspeed>=70)
{
fishspeed-=10;
}
fishtimer.restart();
}
}
if (key_pressed(KEY_HOME))
{
set_sound_master_volume(sound_master_volume+2);
}
if (key_pressed(KEY_END))
{
set_sound_master_volume(sound_master_volume-2);
}
if (key_pressed(KEY_F))
{
add_buffer_item("entertainment_center", "you have caught "+fishcaught+" fish");
}
}
}