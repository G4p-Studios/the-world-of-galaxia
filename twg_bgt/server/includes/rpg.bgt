rpg@[]rpgs(0);
class rpg
{
double x,y,z;
int dir=0;
bool exploded=false;
int range=5;
int distance=5;
int mindammage=4000;
int maxdammage=6000;
mapdata@map;
player@owner;
int spread=20;
rpg(double gx, double gy, double gz, mapdata@m, player@p)
{
x=gx;
y=gy;
z=gz;
@map=m;
@owner=p;
}
void loop(int i)
{
if(@map==null or @owner==null)
{
rpgs.remove_at(i);
return;
}
if(exploded==false)
{
exploded=true;
send_packet(6,"play rpgexplode.ogg "+x+" "+y+" "+z, x,y,z,maps[get_map_index(map.name)]);
send_packet(6,"distsound rpgexplodedist "+x+" "+y+" "+z+" "+map.name,x,y,z,maps[get_map_index(map.name)]);
for(uint i2=0; i2<players.length(); i2+=1)
{
if(in_vehicle(players[i2])>-1 or in_motor(players[i2])>-1 or players[i2].is_dead or is_safe(players[i2].x,players[i2].y,players[i2].z,maps[get_map_index(players[i2].map)]) or players[i2].safe or players[i2].pvp==0 or players[i2].away or players[i2].afk or players[i2].newb==1 or players[i2].looking!="" or players[i2].looker!="") continue;
if(owner.pvp==1 and map.name==players[i2].map and get_3d_distance(players[i2].x, players[i2].y, players[i2].z, x, y, z)<=1)
{
if(players[i2].shielded==1)
{
send_packet(6,"play shieldhit"+random(1,10)+".ogg "+players[i2].x+" "+players[i2].y+" "+players[i2].z, players[i2].x,players[i2].y,players[i2].z,maps[get_map_index(players[i2].map)]);
players[i2].shieldshots-=random(60,90);
}
else if(players[i2].steel_shielded==1)
{
send_packet(6,"play shieldhit"+random(1,10)+".ogg "+players[i2].x+" "+players[i2].y+" "+players[i2].z, players[i2].x,players[i2].y,players[i2].z,maps[get_map_index(players[i2].map)]);
players[i2].steel_shieldshots-=random(30,50);
}
else
{
players[i2].health-=random(2000, 5000);
send_packet(6,"play v"+string_to_number(players[i2].voice)+"hit"+random(1,5)+".ogg "+players[i2].x+" "+players[i2].y+" "+players[i2].z,players[i2].x,players[i2].y,players[i2].z,maps[get_map_index(players[i2].map)]);
players[i2].hitby=owner.name+"'s rpg";
}
}
}
for(uint i2=0; i2<ais.length(); i2+=1)
{
if(ais[i2].map.name==map.name and get_3d_distance(ais[i2].x, ais[i2].y, ais[i2].z, x, y, z)<=25)
{
if (ais[i2].painsound!="") send_packet(6,"play "+ais[i2].painsound+" "+ais[i2].x+" "+ais[i2].y+" "+ais[i2].z, ais[i2].x,ais[i2].y,ais[i2].z,maps[get_map_index(ais[i2].map.name)]);
ais[i2].health-=random(2000, 5000);
ais[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<houses.length(); i2+=1)
{
if(owner.pvp==1 and houses[i2].map==map.name and get_3d_distance(houses[i2].x, houses[i2].y, houses[i2].z, x, y, z)<=25)
{
houses[i2].health-=random(2000, 5000);
houses[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<vvehicles.length(); i2+=1)
{
if(owner.pvp==1 and vvehicles[i2].map==map.name and get_3d_distance(vvehicles[i2].x, vvehicles[i2].y, vvehicles[i2].z, x, y, z)<=25)
{
vvehicles[i2].health-=random(2000, 5000);
vvehicles[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<mmotors.length(); i2+=1)
{
if(owner.pvp==1 and mmotors[i2].map==map.name and get_3d_distance(mmotors[i2].x, mmotors[i2].y, mmotors[i2].z, x, y, z)<=25)
{
mmotors[i2].health-=random(2000, 5000);
mmotors[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<vs.length(); i2+=1)
{
if(owner.pvp==1 and vs[i2].map==map.name and get_3d_distance(vs[i2].x, vs[i2].y, vs[i2].z, x, y, z)<=25)
{
vs[i2].health-=random(2000, 5000);
vs[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<mos.length(); i2+=1)
{
if(owner.pvp==1 and mos[i2].map==map.name and get_3d_distance(mos[i2].x, mos[i2].y, mos[i2].z, x, y, z)<=25)
{
mos[i2].health-=random(2000, 5000);
mos[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<lockers.length(); i2+=1)
{
if(owner.pvp==1 and lockers[i2].map==map.name and get_3d_distance(lockers[i2].x, lockers[i2].y, lockers[i2].z, x, y, z)<=25)
{
lockers[i2].health-=random(2000, 5000);
lockers[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<fridges.length(); i2+=1)
{
if(owner.pvp==1 and fridges[i2].map==map.name and get_3d_distance(fridges[i2].x, fridges[i2].y, fridges[i2].z, x, y, z)<=25)
{
fridges[i2].health-=random(2000, 5000);
fridges[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<robots.length(); i2+=1)
{
if(owner.pvp==1 and robots[i2].map.name==map.name and get_3d_distance(robots[i2].x, robots[i2].y, robots[i2].z, x, y, z)<=25)
{
robots[i2].health-=random(2000, 5000);
robots[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<microwaves.length(); i2+=1)
{
if(owner.pvp==1 and microwaves[i2].map==map.name and get_3d_distance(microwaves[i2].x, microwaves[i2].y, microwaves[i2].z, x, y, z)<=25)
{
microwaves[i2].health-=random(2000, 5000);
microwaves[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<air_conditioners.length(); i2+=1)
{
if(owner.pvp==1 and air_conditioners[i2].map==map.name and get_3d_distance(air_conditioners[i2].x, air_conditioners[i2].y, air_conditioners[i2].z, x, y, z)<=25)
{
air_conditioners[i2].health-=random(2000, 5000);
air_conditioners[i2].hitby=owner.name+"'s rocket";
}
}
for(uint i2=0; i2<steams.length(); i2+=1)
{
if(owner.pvp==1 and steams[i2].map==map.name and get_3d_distance(steams[i2].x, steams[i2].y, steams[i2].z, x, y, z)<=25)
{
steams[i2].health-=random(2000, 5000);
steams[i2].hitby=owner.name+"'s rocket";
}
}
for(uint i2=0; i2<fans.length(); i2+=1)
{
if(owner.pvp==1 and fans[i2].map==map.name and get_3d_distance(fans[i2].x, fans[i2].y, fans[i2].z, x, y, z)<=25)
{
fans[i2].health-=random(2000, 5000);
fans[i2].hitby=owner.name+"'s rocket";
}
}
for(uint i2=0; i2<playerstores.length(); i2+=1)
{
if(owner.pvp==1 and playerstores[i2].map==map.name and get_3d_distance(playerstores[i2].x, playerstores[i2].y, playerstores[i2].z, x, y, z)<=25)
{
playerstores[i2].health-=random(2000, 5000);
playerstores[i2].hitby=owner.name+"'s rpg";
}
}
for(uint i2=0; i2<beehives.length(); i2+=1)
{
if(owner.pvp==1 and beehives[i2].map==map.name and get_3d_distance(beehives[i2].x, beehives[i2].y, beehives[i2].z, x, y, z)<=25)
{
beehives[i2].health-=random(2000, 5000);
beehives[i2].hitby=owner.name+"'s rpg";
}
}
for(uint v=0; v<vs.length(); v++)
{
if(owner.pvp==1 and vs[v].map==map.name and get_3d_distance(x,y,z,vs[v].x,vs[v].y,vs[v].z)<=20)
vs[v].hit(random(100000,100000),owner.name+"'s rpg");
}
for(uint m=0; m<mos.length(); m++)
{
if(owner.pvp==1 and mos[m].map==map.name and get_3d_distance(x,y,z,mos[m].x,mos[m].y,mos[m].z)<=20)
mos[m].hit(random(100000,100000),owner.name+"'s rpg");
}
rpgs.remove_at(i);
return;
}
}
}
void spawn_rpg(double x, double y, double z, mapdata@m, player@p)
{
rpg f1(x, y, z, m, p);
if(@f1.map==null or @f1.owner==null) return;
rpgs.insert_last(f1);
}
