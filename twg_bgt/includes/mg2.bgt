int beeptime=250;
double totalcoins=0;
int health=100;
int health1=1;
int health2=2;
timer moveTimer;
timer beepTimer;
sound beep, bottom, mg2miss, mg2hit, mg2win, winfull, ssonar, killed;
void mg2()
{
beeptime=250;
totalcoins=0;
health=100;
beep.load("beep2.ogg");
mg2miss.load("miss.ogg");
mg2hit.load("hit.ogg");
mg2win.load("win.ogg");
killed.load("killed.ogg");
bottom.load("bottom.ogg");
winfull.load("winfull.ogg");
ssonar.load("sonar.ogg");
beep.pitch=100;
beep.pan=random(-20,20);
beep.play_looped();
while(true)
{
wait(5);
mainloop();
if (beepTimer.elapsed>=beeptime)
{
beep.pitch=beep.pitch-1;
beepTimer.restart();
}
if (keyc.key_down(keyc.getKey("clipcopy")))
{
beep(1025);
clipboard_copy_text(m.get_item_name(m.menu_position));
}
if (key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT))
{
if (key_pressed(KEY_COMMA)==false and kcomma.pressing())
{
prevbufferitem();
}
if (key_pressed(KEY_PERIOD)==false and kperiod.pressing())
{
nextbufferitem();
}
if (key_pressed(KEY_LBRACKET)==false and klbracket.pressing())
{
bufferleft();
}
if (key_pressed(KEY_RBRACKET)==false and krbracket.pressing())
{
bufferright();
}
}
if (shift_is_down())
{
if (key_pressed(KEY_COMMA))
{
topbufferitem();
}
if (key_pressed(KEY_PERIOD))
{
bottombufferitem();
}
if (key_pressed(KEY_LBRACKET))
{
firstbuffer();
}
if (key_pressed(KEY_RBRACKET))
{
lastbuffer();
}
}
if(key_pressed(KEY_SLASH))
{
string chat=v.input("type your message here");
if (chat!="" and !is_eloquence_crash_word(chat) and get_sequence(chat, true)<=3)
{
string[] chats=string_split(chat,"::",true);
if(chat!="")
{
string sendmsg=chat;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id,sendmsg,1);
}
}
}
if (key_pressed(KEY_BACKSLASH) and dlocalchat==0)
{
string s=v.input("type your message here");
if (s!="" and !is_eloquence_crash_word(s) and get_sequence(s, true)<=3)
{
string sendmsg=s;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id, "localchat "+sendmsg, 0);
}
}
if(key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT) and key_up(KEY_LMENU) and key_up(KEY_RMENU) and key_pressed(KEY_EQUALS))
{
string colocar=v.input("enter the command. Note: / will be put before it automaticly");
if(colocar!="" and !is_eloquence_crash_word(colocar) and get_sequence(colocar, true)<=3)
{
string sendmsg=colocar;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id, "/"+sendmsg, 1);
}
}
if (key_pressed(KEY_ESCAPE))
{
beep.stop();
ssonar.stop();
send_reliable(peer_id, "acoins "+totalcoins, 0);
add_buffer_item("entertainment_center", "you earned a total of "+totalcoins+" coins in this game!");
totalcoins=0;
entertainment_centermenu();
return;
}
if (beep.pan<=3 and beep.pan>=-3)
{
ssonar.play_looped();
}else{
ssonar.stop();
}
if (key_pressed(KEY_B)) {
add_buffer_item("entertainment_center", ""+health+" percent");
}
if (key_down(KEY_LEFT) and moveTimer.elapsed>=50) {
if (beep.pan<=15)
{
p.play_stationary("floorstep"+random(1,5)+".ogg", false,0,0,0,100);
beep.pan=beep.pan+2;
moveTimer.restart();
}
}
if (key_down(KEY_RIGHT) and moveTimer.elapsed>=50) {
if (beep.pan>=-15)
{
p.play_stationary("floorstep"+random(1,5)+".ogg", false,0,0,0,100);
beep.pan=beep.pan-2;
moveTimer.restart();
}
}
if (key_pressed(KEY_SPACE)) {
p.play_stationary("gun.ogg",false,0,0,0,100);
if (beep.pan>=-3 and beep.pan<=3)
{
beephit();
beep.pitch=100;beep.pan=random(-30,30);beep.play_looped();
}
}
if (beep.pitch<=10)
{
beep.stop();
bottom.stop();
bottom.play_wait();
health-=random(health1, health2);
beep.pitch=100;
beep.play_looped();
}
if (health<=0)
{
beep.stop();
ssonar.stop();
killed.play_wait();
send_reliable(peer_id, "acoins "+totalcoins, 0);
add_buffer_item("entertainment_center", "you earned a total of "+totalcoins+" coins in this game!");
totalcoins=0;
entertainment_centermenu();
return;
}
wait(5);
}
}
void beephit()
{
health1+=1;
health2+=2;
ssonar.stop();
beep.stop();
mg2hit.stop();
mg2hit.play();
wait(400);
totalcoins+=random(1,2);
if (beeptime>=20)
{
beeptime-=10;
}
}