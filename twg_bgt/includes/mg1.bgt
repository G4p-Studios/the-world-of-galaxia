timer shottimer, flytimer, lifetimer;
int mg1lives=10;
int gamekills=0;
int reversed=0;
int shottime=1000;
double coinsammount;
int mg1score=0;
int shot=0;
int flyspeed=200;
sound lost, hitwall1, hitwall2, hitcan, flycan;
void mg1()
{
mg1lives=10;
reversed=0;
shottime=1000;
coinsammount=0;
mg1score=0;
shot=0;
flyspeed=200;
lost.load("lost.ogg");
hitwall1.load("hitwall1.ogg");
hitwall2.load("hitwall2.ogg");
flycan.load("flycan"+random(1,3)+".ogg");
flycan.pan=-30;
flycan.play_looped();
while (true)
{
wait(5);
mainloop();
if (mg1lives<=0)
{
hitwall1.stop();
hitwall2.stop();
flycan.stop();
hitcan.stop();
lost.play_wait();
send_reliable(peer_id, "acoins "+coinsammount, 0);
add_buffer_item("entertainment_center", "you earned a total of "+coinsammount+" coins in this game!");
coinsammount=0;
entertainment_centermenu();
return;
}
if (flyspeed<=30)
{
flyspeed=30;
}
if (shot==1)
{
if (shottimer.elapsed>=shottime)
{
flycan.load("flycan"+random(1,3)+".ogg");
flycan.pan=-30;
flycan.play_looped();
shot=0;
shottimer.restart();
}
}
if (flytimer.elapsed>=flyspeed)
{
if (reversed==0)
{
flycan.pan=flycan.pan+2;
flytimer.restart();
}
if (reversed==1)
{
flycan.pan=flycan.pan-2;
flytimer.restart();
}
}
if (flycan.pan<=-30 and reversed==1)
{
mg1lives-=1;
hitwall1.stop();
hitwall1.play();
flycan.pan=-29;
reversed=0;
}
if (flycan.pan>=30)
{
mg1lives-=1;
hitwall2.stop();
hitwall2.play();
flycan.pan=29;
reversed=1;
}
if (keyc.key_down(keyc.getKey("clipcopy")))
{
beep(1025);
clipboard_copy_text(m.get_item_name(m.menu_position));
}
if (key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT))
{
if (key_pressed(KEY_COMMA)==false and kcomma.pressing())
{
prevbufferitem();
}
if (key_pressed(KEY_PERIOD)==false and kperiod.pressing())
{
nextbufferitem();
}
if (key_pressed(KEY_LBRACKET)==false and klbracket.pressing())
{
bufferleft();
}
if (key_pressed(KEY_RBRACKET)==false and krbracket.pressing())
{
bufferright();
}
}
if (shift_is_down())
{
if (key_pressed(KEY_COMMA))
{
topbufferitem();
}
if (key_pressed(KEY_PERIOD))
{
bottombufferitem();
}
if (key_pressed(KEY_LBRACKET))
{
firstbuffer();
}
if (key_pressed(KEY_RBRACKET))
{
lastbuffer();
}
}
if(key_pressed(KEY_SLASH))
{
string chat=v.input("type your message here");
if (chat!="" and !is_eloquence_crash_word(chat) and get_sequence(chat, true)<=3)
{
string[] chats=string_split(chat,"::",true);
if(chat!="")
{
string sendmsg=chat;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id,sendmsg,1);
}
}
}
if (key_pressed(KEY_BACKSLASH) and dlocalchat==0)
{
string s=v.input("type your message here");
if (s!="" and !is_eloquence_crash_word(s) and get_sequence(s, true)<=3)
{
string sendmsg=s;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id, "localchat "+sendmsg, 0);
}
}
if(key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT) and key_up(KEY_LMENU) and key_up(KEY_RMENU) and key_pressed(KEY_EQUALS))
{
string colocar=v.input("enter the command. Note: / will be put before it automaticly");
if(colocar!="" and !is_eloquence_crash_word(colocar) and get_sequence(colocar, true)<=3)
{
string sendmsg=colocar;
for(uint a=0; a<aliases.length(); a+=1)
{
string[] a2=string_split(aliases[a],":",false);
if(a2.length()==2)
sendmsg=string_replace(sendmsg,a2[0],a2[1],true);
}
send_reliable(peer_id, "/"+sendmsg, 1);
}
}
if (key_pressed(KEY_SPACE))
{
p.play_stationary("gun.ogg",false,0,0,0,100);
if (flycan.pan==-2 or flycan.pan==-1 or flycan.pan==0 or flycan.pan==1 or flycan.pan==2)
{
reversed=0;
hitcan.load("hitcan"+random(1,3)+".ogg");
flycan.stop();
coinsammount+=random(1,2);
gamekills+=1;
hitcan.play();
flyspeed-=5;
if (gamekills==5 or gamekills==10 or gamekills==20 or gamekills==30 or gamekills==40 or gamekills==50)
{
speak("extra life!");
mg1lives+=1;
}
shot=1;
}
}
if(key_pressed(KEY_ESCAPE))
{
hitwall1.stop();
hitwall2.stop();
flycan.stop();
hitcan.stop();
send_reliable(peer_id, "acoins "+coinsammount, 0);
add_buffer_item("entertainment_center", "you earned a total of "+coinsammount+" coins in this game!");
coinsammount=0;
entertainment_centermenu();
return;
}
if (key_pressed(KEY_K))
{
speak("kills "+gamekills);
}
if (key_pressed(KEY_L))
{
speak("lives "+mg1lives+"");
}
}
}