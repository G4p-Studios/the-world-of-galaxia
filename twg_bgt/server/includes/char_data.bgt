void scd(player@p)
{
string charfolder="chars/"+p.name;
f.open(charfolder+"/vs.usr","wb");
f.write(p.sky_racerfuel+"\r\n"+p.sky_racerhealth+"\r\n"+p.sorentofuel+"\r\n"+p.sorentohealth+"\r\n"+p.fordfuel+"\r\n"+p.fordhealth+"\r\n"+p.tankfuel+"\r\n"+p.tankhealth+"\r\n"+p.m60_tankfuel+"\r\n"+p.m60_tankhealth+"\r\n"+p.grayhound_busfuel+"\r\n"+p.grayhound_bushealth+"\r\n"+p.BMVfuel+"\r\n"+p.BMVhealth+"\r\n"+p.dogan_slxfuel+"\r\n"+p.dogan_slxhealth+"\r\n"+p.truckfuel+"\r\n"+p.truckhealth+"\r\n"+p.v4_by_4_jeepfuel+"\r\n"+p.v4_by_4_jeephealth+"\r\n"+p.dodge_chargerfuel+"\r\n"+p.dodge_chargerhealth+"\r\n"+p.doom_buggyfuel+"\r\n"+p.doom_buggyhealth+"\r\n"+p.ford_pickup_truckfuel+"\r\n"+p.ford_pickup_truckhealth+"\r\n"+p.mlk_mission_cruiserfuel+"\r\n"+p.mlk_mission_cruiserhealth+"\r\n"+p.muscle_carfuel+"\r\n"+p.muscle_carhealth);
f.close();
f.open(charfolder+"/mos.usr","wb");
f.write(p.generic_motorcyclefuel+"\r\n"+p.generic_motorcyclehealth+"\r\n"+p.ducati_street_fighterfuel+"\r\n"+p.ducati_street_fighterhealth+"\r\n"+p.onda_cbr_600fuel+"\r\n"+p.onda_cbr_600health+"\r\n"+p.yamaha_r6fuel+"\r\n"+p.yamaha_r6health+"\r\n"+p.motor_boatfuel+"\r\n"+p.motor_boathealth+"\r\n"+p.aprilia_v4fuel+"\r\n"+p.aprilia_v4health+"\r\n"+p.aprilia_rs660fuel+"\r\n"+p.aprilia_rs660health+"\r\n"+p.ducati_diavelfuel+"\r\n"+p.ducati_diavelhealth+"\r\n"+p.yamaha_off_roadfuel+"\r\n"+p.yamaha_off_roadhealth+"\r\n"+p.kawasaki_hipersportfuel+"\r\n"+p.kawasaki_hipersporthealth+"\r\n"+p.kawasaki_adventure_tourerfuel+"\r\n"+p.kawasaki_adventure_tourerhealth+"\r\n"+p.ducati_scrumblerfuel+"\r\n"+p.ducati_scrumblerhealth+"\r\n"+p.bmw_off_roadfuel+"\r\n"+p.bmw_off_roadhealth+"\r\n"+p.frog_motorcyclefuel+"\r\n"+p.frog_motorcyclehealth);
f.close();
f.open(charfolder+"/omsg.usr","wb");
f.write(p.onmsg+"\r\n"+p.offmsg+"\r\n"+p.readolmsg);
f.close();
f.open(charfolder+"/beacon.usr","wb");
f.write(p.beacon);
f.close();
f.open(charfolder+"/checkpoint.usr","wb");
f.write(p.cx+":"+p.cy+":"+p.cz+":"+p.cmap+":"+bool_to_string(p.cp));
f.close();
f.open(charfolder+"/nbstats.usr","wb");
f.write(p.nuclearbombspawned);
f.close();
f.open(charfolder+"/bones.usr","wb");
f.write(bool_to_string(p.bone_break)+"\r\n"+p.bone_level+"\r\n"+p.maxbone_level+"\r\n"+p.bonebreak);
f.close();
f.open(charfolder+"/temperature.usr","wb");
f.write(p.temperaturelevel+"\r\n"+p.temperature);
f.close();
f.open(charfolder+"/status.usr","wb");
f.write(p.status);
f.close();
f.open(charfolder+"/clothing.usr","wb");
f.write(p.capacetepolicia+"\r\n"+p.anel+"\r\n"+p.bracadeira+"\r\n"+p.pulseira+"\r\n"+p.coletesalvavida+"\r\n"+p.colete_aprova_de_balas+"\r\n"+p.naopodevestir+"\r\n"+p.ncolete+"\r\n"+p.casacopeles+"\r\n"+p.oculosmizuno+"\r\n"+p.coletemizuno+"\r\n"+p.calcamizuno+"\r\n"+p.botamizuno+"\r\n"+p.coletemilitar+"\r\n"+p.coletecamuflado+"\r\n"+p.tenisnike+"\r\n"+p.camisamalha+"\r\n"+p.jaquetacouro+"\r\n"+p.calcajeans+"\r\n"+p.sapatoscarpin+"\r\n"+p.sapatomagnetico+"\r\n"+p.coturnomilitar+"\r\n"+p.calcalegging+"\r\n"+p.calcacamuflada+"\r\n"+p.luvas+"\r\n"+p.tenisadidas+"\r\n"+p.pulseiraouro+"\r\n"+p.pulseiraprata+"\r\n"+p.pulseirabronze+"\r\n"+p.chapeupanama+"\r\n"+p.bonemizuno+"\r\n"+p.relogio+"\r\n"+p.bullet_proof_vested+"\r\n"+p.bullet_proof_vestshots+"\r\n"+p.shielded+"\r\n"+p.shieldshots+"\r\n"+p.bra+"\r\n"+p.marriage_ring+"\r\n"+p.short_fitting_dresses_with_deep_neckline+"\r\n"+p.easy_summer_dress+"\r\n"+p.short_fitting_top+"\r\n"+p.denim_short_shorts+"\r\n"+p.denim_shirt+"\r\n"+p.t_shirt+"\r\n"+p.sweat_pants+"\r\n"+p.sports_jacket+"\r\n"+p.baseball_cap+"\r\n"+p.open_shoes_with_high_thin_heel+"\r\n"+p.bathrobe+"\r\n"+p.slippers+"\r\n"+p.leather_pants+"\r\n"+p.leather_fitting_short_dress+"\r\n"+p.denim_short_skirt+"\r\n"+p.long_light_skirt+"\r\n"+p.blouse_tight_with_deep_neckline+"\r\n"+p.female_closed_swimsuit+"\r\n"+p.female_outdoor_swimsuit+"\r\n"+p.male_bathing_panties+"\r\n"+p.heavy_studded_leather_boots+"\r\n"+p.classic_straight_pants+"\r\n"+p.classic_jacket+"\r\n"+p.classic_shirt+"\r\n"+p.tie+"\r\n"+p.classic_shoes+"\r\n"+p.openwork_stockings+"\r\n"+p.wedding_dress+"\r\n"+p.wedding_wreath+"\r\n"+p.mens_panties+"\r\n"+p.womens_lace_panties+"\r\n"+p.warm_knitted_hat+"\r\n"+p.down_jacket+"\r\n"+p.leather_jacket_with_fur_trim_on_collar_and_sleeves+"\r\n"+p.fur_coat_short_with_a_hood+"\r\n"+p.warm_male_boots+"\r\n"+p.warm_High_Womens_High_Heel_Boots+"\r\n"+p.warm_sports_jacket_with_hood+"\r\n"+p.leather_cloak+"\r\n"+p.warmed_sports_pants+"\r\n"+p.mens_sweater+"\r\n"+p.female_sweater_with_deep_neckline+"\r\n"+p.warm_pants+"\r\n"+p.warm_high_collar_sweater+"\r\n"+p.soft_scarf+"\r\n"+p.warm_leather_boots+"\r\n"+p.roll_bandage+"\r\n"+p.mens_denim_shorts+"\r\n"+p.mens_lightweight_shorts+"\r\n"+p.mens_lightweight_pants+"\r\n"+p.lightweight_sneakers+"\r\n"+p.womens_sneakers_on_a_high_platform+"\r\n"+p.mens_lightweight_shirt+"\r\n"+p.womens_tight_jeans+"\r\n"+p.b1+"\r\n"+p.b2+"\r\n"+p.b3+"\r\n"+p.b4+"\r\n"+p.b5+"\r\n"+p.b6+"\r\n"+p.b7+"\r\n"+p.b8+"\r\n"+p.b9+"\r\n"+p.b10+"\r\n"+p.b11+"\r\n"+p.b12+"\r\n"+p.b13+"\r\n"+p.b14+"\r\n"+p.b15+"\r\n"+p.b16+"\r\n"+p.b17+"\r\n"+p.b18+"\r\n"+p.b19+"\r\n"+p.b20+"\r\n"+p.b21+"\r\n"+p.b22+"\r\n"+p.b23+"\r\n"+p.b24+"\r\n"+p.b25+"\r\n"+p.b26+"\r\n"+p.b27+"\r\n"+p.b28+"\r\n"+p.armored+"\r\n"+p.armorshots+"\r\n"+p.advanced_bone_repair_kit+"\r\n"+p.large_armor_plated+"\r\n"+p.large_armor_plateshots+"\r\n"+p.steel_shielded+"\r\n"+p.steel_shieldshots);
f.close();
f.open(charfolder+"/antidote.usr","wb");
f.write(p.caverna+"\r\n"+p.ncaverna+"\r\n"+p.tcaverna.elapsed);
f.close();
f.open(charfolder+"/pmreceiving.usr","wb");
f.write(p.pmreceiving);
f.close();
f.open(charfolder+"/partner.usr","wb");
f.write(p.partner);
f.close();
f.open(charfolder+"/ex_partner.usr","wb");
f.write(p.ex_partner);
f.close();
f.open(charfolder+"/swigs.usr","wb");
f.write(p.waterswigs+"\r\n"+p.waterbswigs+"\r\n"+p.gasswigs+"\r\n"+p.colaswigs);
f.close();
f.open(charfolder+"/bank.usr","wb");
f.write(p.contabancaria);
f.close();
f.open(charfolder+"/balance.usr","wb");
f.write(p.balance);
f.close();
f.open(charfolder+"/smartphone.usr","wb");
f.write(p.smartphonecharge+"\r\n"+p.smartphonechargetime+"\r\n"+p.smartphoneon);
f.close();
f.open(charfolder+"/cycle_inventory.usr","wb");
f.write(p.have_cycle_inventory);
f.close();
f.open(charfolder+"/weaponpings.usr","wb");
f.write(p.weaponpings);
f.close();
f.open(charfolder+"/xppotion.usr","wb");
f.write(p.xppotion+"\r\n"+p.xppotiontime+"\r\n"+p.xppotiontimer.elapsed);
f.close();
f.open(charfolder+"/pvp.usr","wb");
f.write(p.pvp);
f.close();
f.open(charfolder+"/pvpd.usr","wb");
f.write(p.pvpd);
f.close();
f.open(charfolder+"/x.usr","wb");
f.write(round(p.x,0));
f.close();
f.open(charfolder+"/y.usr","wb");
f.write(round(p.y,0));
f.close();
f.open(charfolder+"/facing.usr","wb");
f.write(p.facing+"\r\n"+p.ffacing);
f.close();
f.open(charfolder+"/z.usr","wb");
f.write(round(p.z,0));
f.close();
//if(p.is_paid())
//write_to(p.name,"paid.usr",p.paid);
write_to(p.name,"englishmessage.usr",p.englishmessage);
write_to(p.name,"sitting.usr",p.sitting);
write_to(p.name,"compid.usr",p.compid);
write_to(p.name,"air.usr",p.air);
write_to(p.name,"muted.usr",p.muted);
write_to(p.name,"trusted.usr",p.trusted);
write_to(p.name,"lang.usr",p.langchan);
write_to(p.name,"job.usr",p.job);
write_to(p.name,"nickname.usr",p.nickname);
write_to(p.name,"energy.usr",p.energy);
write_to(p.name,"thirst.usr",p.thirst+"\r\n"+p.nthirst+"\r\n"+p.thirstt);
write_to(p.name,"hunger.usr",p.hunger+"\r\n"+p.nhunger+"\r\n"+p.hungerr);
write_to(p.name,"sick.usr",p.sick);
write_to(p.name,"dirty.usr",p.dirty);
write_to(p.name,"wet.usr",p.wet);
if(p.newb==1)
write_to(p.name,"newb.usr","1");
write_to(p.name,"chats.usr",p.chats);
write_to(p.name,"voted.usr",p.voted);
write_to(p.name,"playtime.usr",p.playtimer.elapsed);
write_to(p.name,"finishchallengemaptime.usr",p.finishchallengemaptimer.elapsed);
write_to(p.name,"liquidstime.usr",p.liquidstimer.elapsed);
write_to(p.name,"foodeattime.usr",p.foodeattimer.elapsed);
write_to(p.name,"nicknametime.usr",p.nicktimer.elapsed);
write_to(p.name,"lines.usr",p.editline+"\r\n"+p.removeline+"\r\n"+p.removeowner+"\r\n"+p.aieditline+"\r\n"+p.airemoveline+"\r\n"+p.aitoedit+"\r\n"+p.aitoremove+"\r\n"+p.fadtoedit+"\r\n"+p.drawsoundseditline+"\r\n"+p.drawsoundsremoveline+"\r\n"+p.itemusagelimiteditline+"\r\n"+p.itemusagelimitremoveline);
write_to(p.name,"birthday.usr",p.day+"\r\n"+p.month+"\r\n"+p.year+"\r\n"+p.age);
f.open(charfolder+"/map.usr","wb");
f.write(p.map);
f.close();
f.open(charfolder+"/health.usr","wb");
f.write(p.health);
f.close();
f.open(charfolder+"/kills.usr","wb");
f.write(p.kills);
f.close();
f.open(charfolder+"/deaths.usr","wb");
f.write(p.deaths);
f.close();
f.open(charfolder+"/inv.usr","wb");
f.write(p.get_inv());
f.close();
f.open(charfolder+"/gender.usr","wb");
f.write(p.gender);
f.close();
if(p.gender==0) p.gender2="hes";
else if(p.gender==1) p.gender2="her";
f.open(charfolder+"/giftlimit.usr","wb");
f.write(p.giftlimit);
f.close();
f.open(charfolder+"/country.usr","wb");
f.write(p.country);
f.close();
f.open(charfolder+"/levelsound.usr","wb");
f.write(p.levelsound);
f.close();
f.open(charfolder+"/mapavoltar.usr","wb");
f.write(p.mapavoltar);
f.close();
f.open(charfolder+"/level.usr","w");
f.write(p.level+"\r\n"+p.reinforcement);
f.close();
f.open(charfolder+"/xp.usr","w");
f.write(p.xp);
f.close;
f.open(charfolder+"/voice.usr","w");
f.write(p.voice);
f.close;
f.open(charfolder+"/pitch.usr","w");
f.write(p.pitch);
f.close;
}
void load_char_data(player@p, bool forced=false)
{
string charfolder="chars/"+p.name;
string data;
string test;
if(file_exists(charfolder+"/maps.usr"))
{
f.open(charfolder+"/maps.usr","rb");
f.close();
}
if(file_exists(charfolder+"/bank.usr"))
{
f.open(charfolder+"/bank.usr","rb");
p.contabancaria=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/balance.usr"))
{
f.open(charfolder+"/balance.usr","rb");
p.balance=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/smartphone.usr"))
{
f.open(charfolder+"/smartphone.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>2)
{
p.smartphonecharge=string_to_number(data[0]);
p.smartphonechargetime=string_to_number(data[1]);
p.smartphoneon=string_to_number(data[2]);
}
}
if(file_exists(charfolder+"/bones.usr"))
{
f.open(charfolder+"/bones.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>3)
{
p.bone_break=string_to_bool(data[0]);
p.bone_level=string_to_number(data[1]);
p.maxbone_level=string_to_number(data[2]);
p.bonebreak=data[3];
}
}
if(file_exists(charfolder+"/temperature.usr"))
{
f.open(charfolder+"/temperature.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>1)
{
p.temperaturelevel=string_to_number(data[0]);
p.temperature=(data[1]);
}
}
if(file_exists(charfolder+"/pvp.usr"))
{
f.open(charfolder+"/pvp.usr","rb");
p.pvp=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/pvpd.usr"))
{
f.open(charfolder+"/pvpd.usr","rb");
p.pvpd=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/cycle_inventory.usr"))
{
f.open(charfolder+"/cycle_inventory.usr","rb");
p.have_cycle_inventory=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/weaponpings.usr"))
{
f.open(charfolder+"/weaponpings.usr","rb");
p.weaponpings=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/cheater.usr"))
{
send_reliable(p.peer_id,"play_s warn"+random(1,2)+".ogg",6);
send_reliable(p.peer_id,"stopmoving",0);
p.cheatertimer.restart();
p.cheater=1;
}
/*
if(file_exists(charfolder+"/paid.usr"))
{
string paid=file_get_contents(charfolder+"/paid.usr");
if(paid=="1" or paid=="one")
{
p.title="*";
p.paid=1;
}
}
*/
if(file_exists(charfolder+"/newb.usr"))
{
p.newb=1;
}
if(file_exists(charfolder+"/englishmessage.usr"))
{
f.open(charfolder+"/englishmessage.usr","rb");
p.englishmessage=f.read();
f.close();
}
if(file_exists(charfolder+"/sitting.usr"))
{
f.open(charfolder+"/sitting.usr","rb");
p.sitting=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/disabled.usr"))
{
f.open(charfolder+"/disabled.usr","rb");
p.ds=setdisables(f.read());
f.close();
}
if(file_exists(charfolder+"/muted.usr"))
{
f.open(charfolder+"/muted.usr","rb");
p.muted=f.read();
f.close();
}
if(file_exists(charfolder+"/trusted.usr"))
{
f.open(charfolder+"/trusted.usr","rb");
p.trusted=f.read();
f.close();
}
if(file_exists(charfolder+"/health.usr"))
{
f.open(charfolder+"/health.usr","rb");
data=f.read();
p.health=string_to_number(data);
f.close();
}
if(file_exists(charfolder+"/lang.usr"))
{
f.open(charfolder+"/lang.usr","rb");
p.langchan=f.read();
f.close();
}
if(file_exists(charfolder+"/job.usr"))
{
f.open(charfolder+"/job.usr","rb");
p.job=f.read();
f.close();
}
if(file_exists(charfolder+"/deaths.usr"))
{
f.open(charfolder+"/deaths.usr","rb");
p.deaths=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/kills.usr"))
{
f.open(charfolder+"/kills.usr","rb");
p.kills=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/voted.usr"))
{
f.open(charfolder+"/voted.usr","rb");
p.voted=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/lines.usr"))
{
f.open(charfolder+"/lines.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>11)
{
p.editline=data[0];
p.removeline=data[1];
p.removeowner=data[2];
p.aieditline=data[3];
p.airemoveline=data[4];
p.aitoedit=data[5];
p.aitoremove=data[6];
p.fadtoedit=data[7];
p.drawsoundseditline=data[8];
p.drawsoundsremoveline=data[9];
p.itemusagelimiteditline=data[10];
p.itemusagelimitremoveline=data[11];
}
}
if(file_exists(charfolder+"/birthday.usr"))
{
f.open(charfolder+"/birthday.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>3)
{
p.day=string_to_number(data[0]);
p.month=string_to_number(data[1]);
p.year=string_to_number(data[2]);
p.age=string_to_number(data[3]);
}
}
if(file_exists(charfolder+"/chats.usr"))
{
f.open(charfolder+"/chats.usr","rb");
p.chats=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/map.usr"))
{
f.open(charfolder+"/map.usr","rb");
data=f.read();
if(data=="") data="this:map/does.not\\exist";
p.map=data;
f.close();
}
if(file_exists(charfolder+"/mapavoltar.usr"))
{
f.open(charfolder+"/mapavoltar.usr","rb");
data=f.read();
if(data=="") data="safezone";
p.mapavoltar=data;
f.close();
}
if(file_exists(charfolder+"/playtime.usr"))
{
f.open(charfolder+"/playtime.usr","rb");
p.playtimer.force(string_to_number(f.read()));
f.close();
}
if(file_exists(charfolder+"/finishchallengemaptime.usr"))
{
f.open(charfolder+"/finishchallengemaptime.usr","rb");
p.finishchallengemaptimer.force(string_to_number(f.read()));
f.close();
}
if(file_exists(charfolder+"/liquidstime.usr"))
{
f.open(charfolder+"/liquidstime.usr","rb");
p.liquidstimer.force(string_to_number(f.read()));
f.close();
}
if(file_exists(charfolder+"/foodeattime.usr"))
{
f.open(charfolder+"/foodeattime.usr","rb");
p.foodeattimer.force(string_to_number(f.read()));
f.close();
}
if(file_exists(charfolder+"/nicknametime.usr"))
{
f.open(charfolder+"/nicknametime.usr","rb");
p.nicktimer.force(string_to_number(f.read()));
f.close();
}
if(file_exists(charfolder+"/voice.usr"))
{
f.open(charfolder+"/voice.usr","rb");
p.voice=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/pitch.usr"))
{
f.open(charfolder+"/pitch.usr","rb");
p.pitch=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/energy.usr"))
{
f.open(charfolder+"/energy.usr","rb");
p.energy=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/thirst.usr"))
{
f.open(charfolder+"/thirst.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>2)
{
p.thirst=string_to_number(data[0]);
p.nthirst=string_to_number(data[1]);
p.thirstt=string_to_number(data[2]);
}
}
if(file_exists(charfolder+"/hunger.usr"))
{
f.open(charfolder+"/hunger.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>2)
{
p.hunger=string_to_number(data[0]);
p.nhunger=string_to_number(data[1]);
p.hungerr=string_to_number(data[2]);
}
}
if(file_exists(charfolder+"/sick.usr"))
{
f.open(charfolder+"/sick.usr","rb");
p.sick=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/dirty.usr"))
{
f.open(charfolder+"/dirty.usr","rb");
p.dirty=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/wet.usr"))
{
f.open(charfolder+"/wet.usr","rb");
p.wet=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/beacon.usr"))
{
f.open(charfolder+"/beacon.usr","rb");
p.beacon=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/nbstats.usr"))
{
f.open(charfolder+"/nbstats.usr","rb");
p.nuclearbombspawned=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/status.usr"))
{
f.open(charfolder+"/status.usr","rb");
p.status=f.read();
f.close();
}
if(file_exists(charfolder+"/gender.usr"))
{
f.open(charfolder+"/gender.usr","rb");
p.gender=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/giftlimit.usr"))
{
f.open(charfolder+"/giftlimit.usr","rb");
p.giftlimit=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/country.usr"))
{
f.open(charfolder+"/country.usr","rb");
p.country=f.read();
f.close();
}
if(file_exists(charfolder+"/levelsound.usr"))
{
f.open(charfolder+"/levelsound.usr","rb");
p.levelsound=string_to_number(f.read());
f.close();
}
if(file_exists(charfolder+"/checkpoint.usr"))
{
f.open(charfolder+"/checkpoint.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>3)
{
p.cx=string_to_number(data[0]);
p.cy=string_to_number(data[1]);
p.cz=string_to_number(data[2]);
p.cmap=data[3];
p.cp=string_to_bool(data[4]);
}
}
if(file_exists(charfolder+"/level.usr"))
{
f.open(charfolder+"/level.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>1)
{
p.level=string_to_number(data[0]);
p.reinforcement=string_to_number(data[1]);
}
}
if(file_exists(charfolder+"/xp.usr"))
{
f.open(charfolder+"/xp.usr","r");
p.xp=string_to_number(f.read());
f.close;
p.xprequired=round(power(p.level, 1.6)*p.reinforcement, 0);
}
if(file_exists(charfolder+"/xppotion.usr"))
{
f.open(charfolder+"/xppotion.usr","r");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>2)
{
p.xppotion=string_to_number(data[0]);
p.xppotiontime=string_to_number(data[1]);
p.xppotiontimer.force(string_to_number(data[2]));
}
}
if(file_exists(charfolder+"/pmreceiving.usr"))
{
f.open(charfolder+"/pmreceiving.usr","r");
p.pmreceiving=string_to_number(f.read());
f.close;
}
if(file_exists(charfolder+"/partner.usr"))
{
f.open(charfolder+"/partner.usr","r");
p.partner=f.read();
f.close;
}
if(file_exists(charfolder+"/ex_partner.usr"))
{
f.open(charfolder+"/ex_partner.usr","r");
p.ex_partner=f.read();
f.close;
}
if(file_exists(charfolder+"/swigs.usr"))
{
f.open(charfolder+"/swigs.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>3)
{
p.waterswigs=string_to_number(data[0]);
p.waterbswigs=string_to_number(data[1]);
p.gasswigs=string_to_number(data[2]);
p.colaswigs=string_to_number(data[3]);
}
}
if(file_exists(charfolder+"/vs.usr"))
{
f.open(charfolder+"/vs.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>29)
{
p.sky_racerfuel=string_to_number(data[0]);
p.sky_racerhealth=string_to_number(data[1]);
p.sorentofuel=string_to_number(data[2]);
p.sorentohealth=string_to_number(data[3]);
p.fordfuel=string_to_number(data[4]);
p.fordhealth=string_to_number(data[5]);
p.tankfuel=string_to_number(data[6]);
p.tankhealth=string_to_number(data[7]);
p.m60_tankfuel=string_to_number(data[8]);
p.m60_tankhealth=string_to_number(data[9]);
p.grayhound_busfuel=string_to_number(data[10]);
p.grayhound_bushealth=string_to_number(data[11]);
p.BMVfuel=string_to_number(data[12]);
p.BMVhealth=string_to_number(data[13]);
p.dogan_slxfuel=string_to_number(data[14]);
p.dogan_slxhealth=string_to_number(data[15]);
p.truckfuel=string_to_number(data[16]);
p.truckhealth=string_to_number(data[17]);
p.v4_by_4_jeepfuel=string_to_number(data[18]);
p.v4_by_4_jeephealth=string_to_number(data[19]);
p.dodge_chargerfuel=string_to_number(data[20]);
p.dodge_chargerhealth=string_to_number(data[21]);
p.doom_buggyfuel=string_to_number(data[22]);
p.doom_buggyhealth=string_to_number(data[23]);
p.ford_pickup_truckfuel=string_to_number(data[24]);
p.ford_pickup_truckhealth=string_to_number(data[25]);
p.mlk_mission_cruiserfuel=string_to_number(data[26]);
p.mlk_mission_cruiserhealth=string_to_number(data[27]);
p.muscle_carfuel=string_to_number(data[28]);
p.muscle_carhealth=string_to_number(data[29]);
}
}
if(file_exists(charfolder+"/mos.usr"))
{
f.open(charfolder+"/mos.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>27)
{
p.generic_motorcyclefuel=string_to_number(data[0]);
p.generic_motorcyclehealth=string_to_number(data[1]);
p.ducati_street_fighterfuel=string_to_number(data[2]);
p.ducati_street_fighterhealth=string_to_number(data[3]);
p.onda_cbr_600fuel=string_to_number(data[4]);
p.onda_cbr_600health=string_to_number(data[5]);
p.yamaha_r6fuel=string_to_number(data[6]);
p.yamaha_r6health=string_to_number(data[7]);
p.motor_boatfuel=string_to_number(data[8]);
p.motor_boathealth=string_to_number(data[9]);
p.aprilia_v4fuel=string_to_number(data[10]);
p.aprilia_v4health=string_to_number(data[11]);
p.aprilia_rs660fuel=string_to_number(data[12]);
p.aprilia_rs660health=string_to_number(data[13]);
p.ducati_diavelfuel=string_to_number(data[14]);
p.ducati_diavelhealth=string_to_number(data[15]);
p.yamaha_off_roadfuel=string_to_number(data[16]);
p.yamaha_off_roadhealth=string_to_number(data[17]);
p.kawasaki_hipersportfuel=string_to_number(data[18]);
p.kawasaki_hipersporthealth=string_to_number(data[19]);
p.kawasaki_adventure_tourerfuel=string_to_number(data[20]);
p.kawasaki_adventure_tourerhealth=string_to_number(data[21]);
p.ducati_scrumblerfuel=string_to_number(data[22]);
p.ducati_scrumblerhealth=string_to_number(data[23]);
p.bmw_off_roadfuel=string_to_number(data[24]);
p.bmw_off_roadhealth=string_to_number(data[25]);
p.frog_motorcyclefuel=string_to_number(data[26]);
p.frog_motorcyclehealth=string_to_number(data[27]);
}
}
if(file_exists(charfolder+"/omsg.usr"))
{
f.open(charfolder+"/omsg.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>2)
{
p.onmsg=data[0];
p.offmsg=data[1];
p.readolmsg=string_to_number(data[2]);
}
}
if(file_exists(charfolder+"/clothing.usr"))
{
f.open(charfolder+"/clothing.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>126)
{
p.capacetepolicia=string_to_number(data[0]);
p.anel=string_to_number(data[1]);
p.bracadeira=string_to_number(data[2]);
p.pulseira=string_to_number(data[3]);
p.coletesalvavida=string_to_number(data[4]);
p.colete_aprova_de_balas=string_to_number(data[5]);
p.naopodevestir=string_to_number(data[6]);
p.ncolete=string_to_number(data[7]);
p.casacopeles=string_to_number(data[8]);
p.oculosmizuno=string_to_number(data[9]);
p.coletemizuno=string_to_number(data[10]);
p.calcamizuno=string_to_number(data[11]);
p.botamizuno=string_to_number(data[12]);
p.coletemilitar=string_to_number(data[13]);
p.coletecamuflado=string_to_number(data[14]);
p.tenisnike=string_to_number(data[15]);
p.camisamalha=string_to_number(data[16]);
p.jaquetacouro=string_to_number(data[17]);
p.calcajeans=string_to_number(data[18]);
p.sapatoscarpin=string_to_number(data[19]);
p.sapatomagnetico=string_to_number(data[20]);
p.coturnomilitar=string_to_number(data[21]);
p.calcalegging=string_to_number(data[22]);
p.calcacamuflada=string_to_number(data[23]);
p.luvas=string_to_number(data[24]);
p.tenisadidas=string_to_number(data[25]);
p.pulseiraouro=string_to_number(data[26]);
p.pulseiraprata=string_to_number(data[27]);
p.pulseirabronze=string_to_number(data[28]);
p.chapeupanama=string_to_number(data[29]);
p.bonemizuno=string_to_number(data[30]);
p.relogio=string_to_number(data[31]);
p.bullet_proof_vested=string_to_number(data[32]);
p.bullet_proof_vestshots=string_to_number(data[33]);
p.shielded=string_to_number(data[34]);
p.shieldshots=string_to_number(data[35]);
p.bra=string_to_number(data[36]);
p.marriage_ring=string_to_number(data[37]);
p.short_fitting_dresses_with_deep_neckline=string_to_number(data[38]);
p.easy_summer_dress=string_to_number(data[39]);
p.short_fitting_top=string_to_number(data[40]);
p.denim_short_shorts=string_to_number(data[41]);
p.denim_shirt=string_to_number(data[42]);
p.t_shirt=string_to_number(data[43]);
p.sweat_pants=string_to_number(data[44]);
p.sports_jacket=string_to_number(data[45]);
p.baseball_cap=string_to_number(data[46]);
p.open_shoes_with_high_thin_heel=string_to_number(data[47]);
p.bathrobe=string_to_number(data[48]);
p.slippers=string_to_number(data[49]);
p.leather_pants=string_to_number(data[50]);
p.leather_fitting_short_dress=string_to_number(data[51]);
p.denim_short_skirt=string_to_number(data[52]);
p.long_light_skirt=string_to_number(data[53]);
p.blouse_tight_with_deep_neckline=string_to_number(data[54]);
p.female_closed_swimsuit=string_to_number(data[55]);
p.female_outdoor_swimsuit=string_to_number(data[56]);
p.male_bathing_panties=string_to_number(data[57]);
p.heavy_studded_leather_boots=string_to_number(data[58]);
p.classic_straight_pants=string_to_number(data[59]);
p.classic_jacket=string_to_number(data[60]);
p.classic_shirt=string_to_number(data[61]);
p.tie=string_to_number(data[62]);
p.classic_shoes=string_to_number(data[63]);
p.openwork_stockings=string_to_number(data[64]);
p.wedding_dress=string_to_number(data[65]);
p.wedding_wreath=string_to_number(data[66]);
p.mens_panties=string_to_number(data[67]);
p.womens_lace_panties=string_to_number(data[68]);
p.warm_knitted_hat=string_to_number(data[69]);
p.down_jacket=string_to_number(data[70]);
p.leather_jacket_with_fur_trim_on_collar_and_sleeves=string_to_number(data[71]);
p.fur_coat_short_with_a_hood=string_to_number(data[72]);
p.warm_male_boots=string_to_number(data[73]);
p.warm_High_Womens_High_Heel_Boots=string_to_number(data[74]);
p.warm_sports_jacket_with_hood=string_to_number(data[75]);
p.leather_cloak=string_to_number(data[76]);
p.warmed_sports_pants=string_to_number(data[77]);
p.mens_sweater=string_to_number(data[78]);
p.female_sweater_with_deep_neckline=string_to_number(data[79]);
p.warm_pants=string_to_number(data[80]);
p.warm_high_collar_sweater=string_to_number(data[81]);
p.soft_scarf=string_to_number(data[82]);
p.warm_leather_boots=string_to_number(data[83]);
p.roll_bandage=string_to_number(data[84]);
p.mens_denim_shorts=string_to_number(data[85]);
p.mens_lightweight_shorts=string_to_number(data[86]);
p.mens_lightweight_pants=string_to_number(data[87]);
p.lightweight_sneakers=string_to_number(data[88]);
p.womens_sneakers_on_a_high_platform=string_to_number(data[89]);
p.mens_lightweight_shirt=string_to_number(data[90]);
p.womens_tight_jeans=string_to_number(data[91]);
p.b1=data[92];
p.b2=data[93];
p.b3=data[94];
p.b4=data[95];
p.b5=data[96];
p.b6=data[97];
p.b7=data[98];
p.b8=data[99];
p.b9=data[100];
p.b10=data[101];
p.b11=data[102];
p.b12=data[103];
p.b13=data[104];
p.b14=data[105];
p.b15=data[106];
p.b16=data[107];
p.b17=data[108];
p.b18=data[109];
p.b19=data[110];
p.b20=data[111];
p.b21=data[112];
p.b22=data[113];
p.b23=data[114];
p.b24=data[115];
p.b25=data[116];
p.b26=data[117];
p.b27=data[118];
p.b28=data[119];
p.armored=string_to_number(data[120]);
p.armorshots=string_to_number(data[121]);
p.advanced_bone_repair_kit=string_to_number(data[122]);
p.large_armor_plated=string_to_number(data[123]);
p.large_armor_plateshots=string_to_number(data[124]);
p.steel_shielded=string_to_number(data[125]);
p.steel_shieldshots=string_to_number(data[126]);
}
}
if(file_exists(charfolder+"/antidote.usr"))
{
f.open(charfolder+"/antidote.usr","rb");
string[] data=string_split(f.read(),"\r\n",false);
f.close();
if(data.length>2)
{
p.caverna=string_to_number(data[0]);
p.ncaverna=string_to_number(data[1]);
p.tcaverna.force(string_to_number(data[2]));
}
}
if(file_exists(charfolder+"/nickname.usr"))
{
f.open(charfolder+"/nickname.usr","rb");
data=f.read();
if(data=="")
{
p.nickname=p.name;
}
else
{
p.nickname=data;
}
f.close();
}
int x=-5000,y=-5000,z=-5000;
if(forced)
{
x=p.x;
y=p.y;
z=p.z;
}
if(file_exists(charfolder+"/x.usr"))
{
f.open(charfolder+"/x.usr","rb");
data=f.read();
if(data=="") data=""+random(1,500);
p.x=string_to_number(data);
f.close();
}
if(file_exists(charfolder+"/y.usr"))
{
f.open(charfolder+"/y.usr","rb");
data=f.read();
if(data=="") data=""+random(1,50);
p.y=string_to_number(data);
f.close();
}
if(file_exists(charfolder+"/z.usr"))
{
f.open(charfolder+"/z.usr","rb");
data=f.read();
if(data=="") data="0";
p.z=string_to_number(data);
f.close();
}
if(!map_exists(p.map))
{
p.map="safezone";
p.x=random(20,30);
p.y=random(25,35);
p.z=0;
}
if(x!=p.x||y!=p.y||z!=p.z)
{
move_player(p,p.map,p.x,p.y,p.z,false);
string charfolder="chars/"+p.name;
string[] a=string_split(file_get_contents("pbmaps.svr"),"\r\n",false);
string[] a2=string_split(file_get_contents(charfolder+"/maps.usr"),"\r\n",false);
string[] a3=string_split(file_get_contents("chmaps.svr"),"\r\n",false);
int something=a.find(p.map);
int something2=a2.find(p.map);
int something3=a3.find(p.map);
if(something>-1 or something2>-1 or something3>-1)
{
p.finishchallengemaptimer.force(string_to_number(read_from(p.name,"p.finishchallengemaptimer.usr")));
}
}
if(file_exists(charfolder+"/warning.usr")) p.warning=file_get_contents(charfolder+"/warning.usr");
if(file_exists(charfolder+"/warnlevel.usr")) p.warnlevel=string_to_number(file_get_contents(charfolder+"/warnlevel.usr"));
if(forced) p.send_negated_inv();
p.send_inv();
}
string get_char_val(string name, string value)
{
string cf="chars/"+name;
string ret;
file c;
f.open(cf+"/"+value+".usr","rb");
ret=f.read();
f.close();
return ret;
}
void clear_charstuff(string n)
{
}
string unencrypt_password(string username)
{
string charfolder="chars/"+username;
file p;
p.open(charfolder+"/password.usr","rb");
string pass=p.read();
p.close();
return string_decrypt(pass,"tk3dcharpass_encrypted");
}
