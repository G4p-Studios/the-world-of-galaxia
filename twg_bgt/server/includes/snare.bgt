snare@[] snares(0);
class snare
{
player@owner;
int z;
mapdata@map;
int x, y;
bool d=false;
int pindex=-1;
int range=6;
snare(int wx,int wy,int wz, mapdata@m, player@p)
{
@owner=p;
x=wx;
y=wy;
z=wz;
@map=m;
send_packet(6,"play snareset.ogg "+x+" "+y+" "+z,x,y,z,maps[get_map_index(map.name)]);
}
void loop(int i)
{
if(@map==null or @owner==null)
{
snares.remove_at(i);
return;
}
if(d==false)
{
for(uint px=0; px<players.length(); px++)
{
if(in_vehicle(players[px])>-1 or in_motor(players[px])>-1 or players[px].is_dead or is_safe(players[px].x,players[px].y,players[px].z,maps[get_map_index(players[px].map)]) or players[px].safe or players[px].pvp==0 or players[px].away or players[px].newb==1 or players[px].name==owner.name or players[px].looking!="") continue;
if(map.name==players[px].map and get_3d_distance(x,y,z,players[px].x,players[px].y,players[px].z)<=range)
{
d=true;
}
}
}
if(d==true)
{
send_packet(6,"play snaresnap.ogg "+x+" "+y+" "+z,x,y,z,maps[get_map_index(map.name)]);
for (uint i2=0; i2<players.length(); i2++)
{
if(in_vehicle(players[i2])>-1 or in_motor(players[i2])>-1 or players[i2].is_dead or is_safe(players[i2].x,players[i2].y,players[i2].z,maps[get_map_index(players[i2].map)]) or players[i2].safe or players[i2].pvp==0 or players[i2].away or players[i2].newb==1) continue;
if (players[i2].map==map.name and get_3d_distance(x,y,z,players[i2].x,players[i2].y,players[i2].z)<=10)
{
players[i2].stun(5000);
players[i2].health-=random(200, 500);
players[i2].hitby=owner.name+"'s snare";
send_packet(6,"play v"+string_to_number(players[i2].voice)+"hit"+random(1,5)+".ogg "+players[i2].x+" "+players[i2].y+" "+players[i2].z,players[i2].x,players[i2].y,players[i2].z,maps[get_map_index(players[i2].map)]);
}
}
snares.remove_at(i);
return;
}
}
}
void spawn_snare(int x, int y, int z, mapdata@m, player@p)
{
x++;
snare bomb1(x,y,z,m,p);
if(@bomb1.map==null or @bomb1.owner==null) return;
else snares.insert_last(bomb1);
}
void destroy_all_snares()
{
snares.resize(0);
}
